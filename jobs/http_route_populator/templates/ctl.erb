#!/bin/bash

set -euo pipefail

<%
begin
  nats_url = nil

  if_p('http_route_populator.nats') do |url|
    nats_url = url
  end.else do
    host = link('nats').instances[0].address
    port = link('nats').p("nats.port")
    user = link('nats').p("nats.user")
    password = link('nats').p("nats.password")

    nats_url = "http://#{user}:#{password}@#{host}:#{port}"
  end
rescue
end
%>

RUN_DIR=/var/vcap/sys/run/http_route_populator
LOG_DIR=/var/vcap/sys/log/http_route_populator
PIDFILE=${RUN_DIR}/pid

case $1 in

  start)
    mkdir -p $RUN_DIR $LOG_DIR
    chown -R vcap:vcap $RUN_DIR $LOG_DIR

    echo $$ > $PIDFILE

    exec /var/vcap/packages/http_route_populator/bin/http_route_populator \
      -nats <%= nats_url %> \
      -backendHost <%= link("static").instances[0].address %> \
      -backendPort 8080 \
      -appDomain <%= p("http_route_populator.app_domain") %> \
      -appName <%= p("http_route_populator.app_name") %> \
      -numRoutes <%= p("http_route_populator.num_routes") %> \
      <% if_p("http_route_populator.publish_delay") do |prop| %> \
        -publishDelay <%= prop.to_s %> \
      <% end %> \
      >>  $LOG_DIR/http_route_populator.log \
      2>> $LOG_DIR/http_route_populator.stderr.log

    ;;

  stop)
    kill -9 `cat $PIDFILE`
    rm -f $PIDFILE

    ;;

  *)
    echo "Usage: ctl {start|stop}" ;;

esac
