#!/bin/bash -ex

set -o pipefail

RUN_DIR=/var/vcap/sys/run/throughputramp

mkdir -p $RUN_DIR $LOG_DIR
# clean up previous runs csv files
rm -rf ${LOG_DIR}/*.csv

chown -R vcap:vcap $RUN_DIR $LOG_DIR

PATH=/var/vcap/packages/hey/bin:$PATH

<%
begin
  router_base_url = nil
  cpumonitor_base_url = nil

  if_p('throughputramp.router') do |url|
    router_base_url = url
  end.else do
    host = link('gorouter').instances[0].address

    router_base_url = "http://#{host}:80"
  end

  if_p('throughputramp.cpu_monitor_url') do |url|
    cpumonitor_base_url = url
  end.else do
    host = link('cpumonitor').instances[0].address
    port = link('cpumonitor').p('cpumonitor.port')

    cpumonitor_base_url = "http://#{host}:#{port}"
  end
rescue
end
%>

exec /var/vcap/packages/throughputramp/bin/throughputramp -access-key-id <%= p("throughputramp.access_key_id") %>  \
-secret-access-key <%= p("throughputramp.secret_access_key") %> \
-bucket-name <%= p("throughputramp.bucket_name") %> \
-n <%= p("throughputramp.num_requests") %> -q 100 \
-lower-concurrency  <%= p("throughputramp.lower_concurrency") %> \
-upper-concurrency  <%= p("throughputramp.upper_concurrency") %> \
-s3-region us-east-1 \
-cpumonitor-url <%= cpumonitor_base_url %> \
-local-csv <%= p("throughputramp.local_csv") %> \
-host <%= p("throughputramp.host") %> <%= router_base_url %>
# we should not pass anything after -x flag
